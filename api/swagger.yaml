basePath: /
definitions:
  apierrors.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  apierrors.ValidationErrorResponse:
    properties:
      code:
        type: integer
      failed_fields:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
      status:
        type: string
    type: object
  github_com_miniyus_keyword-search-backend_internal_search.CreateSearch:
    properties:
      description:
        type: string
      host_id:
        type: integer
      publish:
        type: boolean
      query:
        type: string
      query_key:
        type: string
    required:
    - description
    - host_id
    - publish
    - query
    - query_key
    type: object
  github_com_miniyus_keyword-search-backend_internal_search.Description:
    properties:
      description:
        type: string
      id:
        type: integer
      short_url:
        type: string
    type: object
  github_com_miniyus_keyword-search-backend_internal_search.DescriptionWithPage:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_miniyus_keyword-search-backend_internal_search.Description'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  github_com_miniyus_keyword-search-backend_internal_search.MultiCreateSearch:
    properties:
      search:
        items:
          $ref: '#/definitions/github_com_miniyus_keyword-search-backend_internal_search.CreateSearch'
        type: array
    required:
    - search
    type: object
  github_com_miniyus_keyword-search-backend_internal_search.Response:
    properties:
      created_at:
        type: string
      description:
        type: string
      host_id:
        type: integer
      id:
        type: integer
      publish:
        type: boolean
      query:
        type: string
      query_key:
        type: string
      short_url:
        type: string
      updated_at:
        type: string
      views:
        type: integer
    type: object
  github_com_miniyus_keyword-search-backend_internal_search.ResponseByHost:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_miniyus_keyword-search-backend_internal_search.Response'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  internal_hosts.CreateHost:
    properties:
      description:
        type: string
      host:
        type: string
      path:
        type: string
      publish:
        type: boolean
      subject:
        type: string
      user_id:
        type: integer
    required:
    - description
    - host
    - path
    - publish
    - subject
    type: object
  internal_hosts.HostListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/internal_hosts.HostResponse'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  internal_hosts.HostResponse:
    properties:
      description:
        type: string
      host:
        type: string
      id:
        type: integer
      path:
        type: string
      publish:
        type: boolean
      subject:
        type: string
      user_id:
        type: integer
    type: object
  internal_hosts.HostSubjectsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/internal_hosts.Subjects'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  internal_hosts.PatchHost:
    properties:
      description:
        type: string
      host:
        type: string
      path:
        type: string
      publish:
        type: boolean
      subject:
        type: string
    type: object
  internal_hosts.Subjects:
    properties:
      id:
        type: integer
      subject:
        type: string
    type: object
  internal_hosts.UpdateHost:
    properties:
      description:
        type: string
      host:
        type: string
      path:
        type: string
      publish:
        type: boolean
      subject:
        type: string
    required:
    - description
    - host
    - path
    - publish
    - subject
    type: object
  internal_search.CreateSearch:
    properties:
      description:
        type: string
      host_id:
        type: integer
      publish:
        type: boolean
      query:
        type: string
      query_key:
        type: string
    required:
    - description
    - host_id
    - publish
    - query
    - query_key
    type: object
  internal_search.PatchSearch:
    properties:
      description:
        type: string
      publish:
        type: boolean
      query:
        type: string
      query_key:
        type: string
    required:
    - publish
    type: object
  internal_search.Response:
    properties:
      created_at:
        type: string
      description:
        type: string
      host_id:
        type: integer
      id:
        type: integer
      publish:
        type: boolean
      query:
        type: string
      query_key:
        type: string
      short_url:
        type: string
      updated_at:
        type: string
      views:
        type: integer
    type: object
  internal_search.ResponseAll:
    properties:
      data:
        items:
          $ref: '#/definitions/internal_search.Response'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  internal_search.UpdateSearch:
    properties:
      description:
        type: string
      host_id:
        type: integer
      publish:
        type: boolean
      query:
        type: string
      query_key:
        type: string
    required:
    - description
    - host_id
    - publish
    - query
    - query_key
    type: object
  internal_short_url.Response:
    properties:
      url:
        type: string
    type: object
  pagination.Page:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    type: object
  utils.StatusResponse:
    properties:
      status:
        type: boolean
    type: object
host: localhost:9090
info:
  contact:
    email: miniyu97@gmail.com
    name: miniyus
    url: https://miniyus.github.io
  description: keyword-search-backend API
  license:
    name: MIT
  title: keyword-search-backend Swagger API Documentation
  version: 1.0.1
paths:
  /api/hosts:
    get:
      consumes:
      - application/json
      description: get all hosts
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_hosts.HostListResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get all hosts
      tags:
      - Hosts
    post:
      consumes:
      - application/json
      description: create host
      parameters:
      - description: create host
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_hosts.CreateHost'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_hosts.HostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
      security:
      - BearerAuth: []
      summary: create host
      tags:
      - Hosts
  /api/hosts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete host
      parameters:
      - description: host pk
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/utils.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete host
      tags:
      - Hosts
    get:
      consumes:
      - application/json
      description: patch host
      parameters:
      - description: host pk
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_hosts.HostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: patch host
      tags:
      - Hosts
    patch:
      consumes:
      - application/json
      description: patch host
      parameters:
      - description: host pk
        in: path
        name: id
        required: true
        type: integer
      - description: patch host
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_hosts.PatchHost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_hosts.HostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: patch host
      tags:
      - Hosts
    put:
      consumes:
      - application/json
      description: update host
      parameters:
      - description: host pk
        in: path
        name: id
        required: true
        type: integer
      - description: update host
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_hosts.UpdateHost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_hosts.HostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: update host
      tags:
      - Hosts
  /api/hosts/{id}/search:
    get:
      consumes:
      - application/json
      description: get by host id
      parameters:
      - description: host id
        in: path
        name: id
        required: true
        type: integer
      - in: query
        name: order_by
        type: string
      - in: query
        name: query
        type: string
      - in: query
        name: query_key
        type: string
      - in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_miniyus_keyword-search-backend_internal_search.ResponseByHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get by host id
      tags:
      - Hosts
    post:
      consumes:
      - application/json
      description: batch create search by host id
      parameters:
      - description: host id
        in: path
        name: id
        required: true
        type: integer
      - description: multi create search
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_miniyus_keyword-search-backend_internal_search.MultiCreateSearch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_miniyus_keyword-search-backend_internal_search.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: batch create search by host id
      tags:
      - Hosts
  /api/hosts/{id}/search/descriptions:
    get:
      consumes:
      - application/json
      description: get by host id
      parameters:
      - description: host id
        in: path
        name: id
        required: true
        type: integer
      - in: query
        name: order_by
        type: string
      - in: query
        name: query
        type: string
      - in: query
        name: query_key
        type: string
      - in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_miniyus_keyword-search-backend_internal_search.DescriptionWithPage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get by host id
      tags:
      - Hosts
  /api/hosts/subjects:
    get:
      consumes:
      - application/json
      description: get subjects by group id
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_hosts.HostSubjectsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get subjects by group id
      tags:
      - Hosts
  /api/search:
    post:
      consumes:
      - application/json
      description: create search
      parameters:
      - description: create search
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_search.CreateSearch'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_search.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
      security:
      - BearerAuth: []
      summary: create search
      tags:
      - Search
  /api/search/{id}:
    delete:
      consumes:
      - application/json
      description: get search
      parameters:
      - description: search pk
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/utils.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get search
      tags:
      - Search
    get:
      consumes:
      - application/json
      description: get search
      parameters:
      - description: search pk
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_search.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get search
      tags:
      - Search
    patch:
      consumes:
      - application/json
      description: get search
      parameters:
      - description: search pk
        in: path
        name: id
        required: true
        type: integer
      - description: update search
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_search.PatchSearch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_search.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get search
      tags:
      - Search
    post:
      consumes:
      - multipart/form-data
      description: upload image
      parameters:
      - description: search pk
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_search.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: upload image
      tags:
      - Search
    put:
      consumes:
      - application/json
      description: get search
      parameters:
      - description: search pk
        in: path
        name: id
        required: true
        type: integer
      - description: update search
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_search.UpdateSearch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_search.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get search
      tags:
      - Search
  /api/search/all:
    get:
      consumes:
      - application/json
      description: create search
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_search.ResponseAll'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.ValidationErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.ErrorResponse'
      security:
      - BearerAuth: []
      summary: create search
      tags:
      - Search
  /api/short-url/{code}:
    get:
      consumes:
      - application/json
      description: find url by code
      parameters:
      - description: short url code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_short_url.Response'
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: find url by code
      tags:
      - ShortUrl
  /api/short-url/{code}/redirect:
    get:
      consumes:
      - application/json
      description: redirect real url from short-url
      parameters:
      - description: short url code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_short_url.Response'
        "302":
          description: Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: redirect real url from short-url
      tags:
      - ShortUrl
  /api/test:
    post:
      description: test api
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.StatusResponse'
      summary: test api
      tags:
      - Test
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Bearer token type
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
